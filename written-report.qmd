---
title: "The Impact of Race, Gender, First-gen Status, Sleep Amount, and Institution Type on the Academic Performance of College Students"
author: "Wale: Liane, Amy, Eshan, Will"
date: "10/31/24"
format: pdf
execute: 
  warning: false
  message: false
  echo: false
editor: visual
bibliography: data/references.bib
---

```{r}
#| label: load packages and data
library(tidyverse)
# library(GGally)
# library(dplyr)
library(knitr)
library(broom)
#library(pROC)
library(car)
library(yardstick)
library(patchwork)
#library(rms)
library(gridExtra)

university_dataset <- read_csv("data/cmu-sleep.csv")
#glimpse(university_dataset)
```

## Introduction and Data

#### Project Motivation and Research Question

Given our age, we are interested in exploring how collegiate academic performance is explained by various different factors, included, but not limited to, differences in a student's university type, sleep levels, and demographic background. It is generally understood that lower levels of sleep negatively impact academic performance, but we are interested in how this impact varies or might be challenged by different factors and how we may be able to predict academic performance based on different factors. We hypothesize that the average time in bed will have the largest effect on cumulative GPA and that having less variation in bed time will lead to a higher cumulative GPA. We also anticipate the type of university students attend and first-gen status to have an affect on students' GPA. Our research question is as follows: What factors affect academic performance (in terms of GPA) of college students?

#### Dataset and Key Variables

The data was originally collected with participants being first-year students at the following three universities: Carnegie Mellon University (CMU), a STEM-focused private university, The University of Washington (UW), a large public university, and Notre Dame University (ND), a private Catholic university. To collect data on sleep, each participating student was given a device to track their sleep and physical activity for a month in the spring term of years 2016 to 2019, and demographic data was provided by university registrars [@cmu_sleep].

There were originally 634 observations, representing the 634 participants in this study. We filtered out students whose data was collected less than 50% of the term, leaving us with 588 participants. `demo_race` is a binary variable with 0 being underrepresented students and 1 being non-underrepresented students. Students are considered underrepresented if either parent is Black, Hispanic or Latino, Native American, or Pacific, and students are deemed non-underrepresented if both parents have White or Asian ancestry. `demo_gender` and `demo_firstgen` are also both binary variables with 0 being male and 1 being female, and with 0 being non-first gen and 1 being first-gen, respectively. The mean successive squared difference of bedtime (`bedtime_mssd`) measures the bedtime variability, specifically the average of the squared difference of bedtime on consecutive nights. To measure academic performance, we will be using variables `term_gpa` and `cum_gpa` (cumulative GPA) as response variables. The cumulative GPA is the GPA of each student's freshman fall semester.

```{r}
university_clean <- university_dataset |>
  mutate(university = case_when(
    study %in% c(1, 5) ~ "stem_priv",
    study %in% c(2, 3) ~ "public",
    study == 4 ~ "cath_priv"
  )) |>
  filter(frac_nights_with_data > .50) |>
  filter(demo_firstgen != 2)
#glimpse(university_clean)

```

Four new variables were created to aid our analysis. `gpa_split` was created as our response variable, which is a binary variable that classifies GPA as "High" or "Low". A "High" GPA was determined as above the 75th percentile (3.81 GPA) of the overall term GPAs. "Low" GPA represents all the term GPAs below the 75th percentile. `university` is a variable which groups studies done by university. `threshold_gpa` is a binary variable that classifies GPA as "high" if a student's term GPA is higher than or equal to their cumulative GPA, and "low" if it is less than their cumulative GPA. `daytime_sleep_lvl` is a binary variable that uses a threshold of 60 minutes to determine whether a student's average daytime sleep is long ("high") or short ("low").

#### Univariate Exploratory Data Analysis

```{r}
# Generate summary statistics table
summary_table <- university_clean %>%
  summarize(
    Min = min(term_gpa),
    Q1 = quantile(term_gpa, 0.25),
    Median = median(term_gpa),
    Mean = mean(term_gpa),
    Q3 = quantile(term_gpa, 0.75),
    Max = max(term_gpa),
    SD = sd(term_gpa)
  ) |>
  kable(digits = 3, caption = "Summary Statistics of Term GPA")

# Print summary table
summary_table

```

Based on table above, the 75th percentile of overall term GPAs for this dataset was 3.81, which we used to create the response variable `gpa_split`.

```{r}

gpa_ss <- university_clean |>
  group_by(university) |>
   summarize(
     mean_cgpa = mean(cum_gpa, na.rm = TRUE),
     median_cgpa = median(cum_gpa, na.rm = TRUE),
     sd_cgpa = sd(cum_gpa, na.rm = TRUE),
     min_cgpa = min(cum_gpa, na.rm = TRUE),
     max_cgpa = max(cum_gpa, na.rm = TRUE),
     count = n()
   ) |>
   kable(digits = 3, caption = "Summary of Cumulative GPA by University")
 gpa_ss

#mutating variables
university_clean <- university_clean |>
  mutate(gpa_split = if_else(
    term_gpa >= 3.81, "High GPA", "Low GPA"),
  threshold_gpa = if_else(term_gpa < cum_gpa, "low", "high"),
  daytime_sleep_lvl = if_else(daytime_sleep > 60, "high", "low"))

```

From this table, we noticed that minimum cumulative GPA at the Catholic private school is significantly higher than those of the STEM private school and public school. The Catholic private schoolâ€™s mean and median cumulative GPA are also higher than the other two schools.

```{r}
#| label: univariate-EDA

# university_clean |> 
#   select(term_gpa, cum_gpa, TotalSleepTime, bedtime_mssd, demo_firstgen, university, daytime_sleep) |>
#   ggpairs()

pg1 <- university_clean |>
  ggplot(aes(x = term_gpa)) +
  geom_histogram() +
  labs(title = "Distribution of the Term GPA",
       x = "Term GPA",
       y = "Count") + 
      theme(
        plot.title = element_text(size = 9),
        plot.subtitle = element_text(size = 7),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7)
)

pg2 <- university_clean |>
  ggplot(aes(x = term_gpa)) +
  geom_histogram(bins = 12) +
  labs(title = "Distribution of the Term GPA",
       subtitle = "by University",
       x = "Term GPA",
       y = "Count") +
  facet_wrap(~university) + 
      theme(
        plot.title = element_text(size = 9),
        plot.subtitle = element_text(size = 7),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7)
)

pg3 <- university_clean |>
  ggplot(aes(x = cum_gpa)) +
  geom_histogram() +
  labs(title = "Distribution of the Cumulative GPA",
       x = "Cumulative GPA",
       y = "Count") +
      theme(
  plot.title = element_text(size = 9),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7)
)

pg4 <- university_clean |>
  ggplot(aes(x = cum_gpa)) +
  geom_histogram(bins = 12) +
  labs(title = "Distribution of the Cumulative GPA",
       subtitle = "by University",
       x = "Cumulative GPA",
       y = "Count") +
  facet_wrap(~university) +
      theme(
  plot.title = element_text(size = 9),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7),
  plot.subtitle = element_text(size = 7)
)


gpa_plots <- (pg1 | pg2) / (pg3 | pg4) 
gpa_plots 


#a lot of NA values for the Catholic school -> will not use this variable
#for analyses


```

These four graphs show the distributions of term GPA and cumulative GPA. For the Catholic private school and the public school, there is a notable increase in the number of 4.0 term GPAs (Spring semester) compared to 4.0 cumulative GPAs (Fall semester), but the number of 4.0 term GPAs remain similar for the STEM private school.

Additionally, the distribution of `TotalSleepTime` appears to be unimodal and normally distributed, with a median around 400 minutes. The distribution of both bedtime variability (`bedtime_mssd`) and daytime sleep are both right-skewed (Appendix Figure 3).

**Bivariate Exploratory Data Analysis**

```{r, fig.width = 12, fig.height = 5}



p5 <- university_clean |>
  ggplot(aes(
    x = university,
    y = term_gpa,
    fill = university
  )) +
  geom_boxplot() +
  labs(
    title = "Term GPA by University Type",
    x = "University",
    y = "Term GPA"
  ) +
    theme(
    plot.title = element_text(size = 9, face = "bold", hjust = 0.5),
    legend.position = "bottom",
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 9),
    legend.direction = "horizontal",
    legend.key.size = unit(7, "pt")
  )


p7 <- university_clean |>
  ggplot(aes(
    x = bedtime_mssd, 
    y = term_gpa, 
    color = university
  )) +
  geom_point(alpha = 0.6) + 
  geom_smooth(method = "lm", se = FALSE) + 
  labs(x = "Bedtime MSSD",
       y = " Term GPA/4.0",
       title = "Relationship between Bedtime MSSD \n and Term GPA" ) +
    theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    legend.position = "bottom",
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 9),
    legend.direction = "horizontal",
    legend.key.size = unit(7, "pt")
  )

#keep
p12 <- ggplot(university_clean, aes(x = university, fill = gpa_split)) +
  geom_bar(position = "fill") +
  labs(
    title = "Distribution of High and Low \n Term GPA by University Type",
    x = "University Type",
    y = "Count",
    fill = "GPA"
  ) +
    theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9),
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 9),
    legend.direction = "horizontal",
    legend.position = "bottom",
    legend.key.size = unit(7, "pt")
  )

grid.arrange(p7, p12, ncol =2)
```

The graph on the left shows the relationship between the mean successive squared difference of bedtimes (`bedtime_mssd`) and a student's term GPA. The lines of best fit for the public and STEM private school had very similar slopes and intercepts, however, for the Catholic private school, the relationship was weaker, indicating the possibility of an interaction effect. The graph on the right shows each universityâ€™s distribution of GPAs above the 75th percentile ("High GPA") compared to those below ("Low GPA"). The proportion of "High GPA"s is higher for the Catholic private university compared to those of the public and STEM private universities, which have similarly lower proportions.

```{r}
fig.width = 5
fig.height = 4

p4 <- university_clean |>
  mutate(threshold_gpa = if_else(term_gpa < cum_gpa, "low", "high"))|>
  ggplot(aes(x = TotalSleepTime/60, y = term_gpa, color = factor(threshold_gpa))) +
  facet_wrap(~ university,
             labeller = labeller(
              university = c("cath_priv" = "Private (Catholic)",
                             "public" = "Public",
                             "stem_priv" = "Private (STEM)"))) + 
  geom_point(alpha = 0.3) +
  geom_smooth(aes(color = factor(threshold_gpa)), method = "lm", se = FALSE) +
  scale_color_manual(values = c("low" = "blue", "high" = "red")) +
  labs(
    title = "Term GPA vs Total Sleep Time",
    subtitle = "By University Type",
    x = "Total Sleep Time (hours)",
    y = "Term GPA /4.0",
    color = "GPA Threshold"
 ) +
    theme(
    plot.title = element_text(size = 8, face = "bold", hjust = 0.5),
    plot.subtitle = element_text(size = 8, face = "bold", hjust = 0.5),
    legend.position = "bottom",
    axis.title.x = element_text(size = 7),
    axis.title.y = element_text(size = 7),
    legend.text = element_text(size = 7),
    legend.title = element_text(size = 7),
    legend.direction = "vertical"
  )

p8 <- university_clean |>
  ggplot(aes(
    x = daytime_sleep,
    y = term_gpa
  )) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Term GPA vs. Daytime Sleep",
    x = "Daytime Sleep (minutes)",
    y = "Term GPA /4.0"
  ) + theme(
    axis.title.x = element_text(size = 7),
    axis.title.y = element_text(size = 7),
    plot.title = element_text(size = 9, hjust = 0.5, face = "bold"),
    legend.text = element_text(size =7),
    legend.title = element_text(size = 7),
    legend.direction = "horizontal",
    legend.postion = "bottom"
  )

# p9 <- university_clean |>
#   mutate(threshold_gpa = if_else(term_gpa < cum_gpa, "low", "high"))|>
#   ggplot(aes(
#     x = Zterm_units_ZofZ,
#     y = TotalSleepTime,
#     color = university
#   )) + 
#   facet_wrap(~threshold_gpa) +
#   geom_point() +
#   geom_smooth(method = "lm") +
#    labs(x = "Term Units Z score",
#         y = " Total Sleep Time",
#         title = "Total Sleep Time by Term Units Z-score")

p10 <- university_clean |>
  mutate(threshold_gpa = if_else(term_gpa < cum_gpa, "low", "high"))|>
  ggplot(aes(x = daytime_sleep, y = term_gpa, color = threshold_gpa)) +
  facet_wrap(~threshold_gpa) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Term GPA by Daytime Sleep",
    x = "Daytime Sleep (minutes)",
    y = "Term GPA /4.0",
    color = "GPA Threshold") +
  theme(axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7),
        plot.title = element_text(size = 9, hjust = 0.5, face = "bold"),
        legend.position = "bottom",
        legend.key.size = unit(7, "pt"),
        legend.title = element_text(size = 9),
        legend.direction = "vertical") +
  scale_color_manual(values = c("high" = "lightpink",
                         "low" = "steelblue"),
                     labels = c("high" = "higher GPA than last semester",
                         "low" = "lower GPA than last semester"))

grid.arrange(p4,p10, ncol = 2)
```

The graph on the left shows the relationship between a student's term GPA and their total sleep time, separated by university. There is a potential interaction effect between `threshold_gpa` and `university` since the relationship between Term GPA and Total Sleep Time is different for different GPA thresholds and universities. The graph on the right shows the relationship between `term_gpa` and `daytime_sleep` by `threshold_gpa`. For students that had a higher term GPA than cumulative GPA, taking more naps did not have a notably strong relationship with term GPA; however, for those that had a lower term GPA than cumulative GPA, taking more naps had a larger impact on term GPA, suggesting a potential interaction effect between `gpa_threshold` and `daytime_sleep`.Â 

## Methodology

To model the relationship between GPA and different factors, logistic regression was the best choice, with the response being `gpa_split`. We fit a logistic regression model with predictors `TotalSleepTime`, `university`, `daytime_sleep_lvl`, `demo_firstgen`, `demo_gender`, `bedtime_mssd`, `demo_race`, and `threshold_gpa` to see which could potentially be significant.

```{r}
university_clean$university <- factor(university_clean$university)
university_clean$university <- relevel(university_clean$university , ref = "public")

log_model <- glm(as.factor(gpa_split) ~ TotalSleepTime + university + daytime_sleep_lvl + demo_firstgen + demo_gender + bedtime_mssd + demo_race + threshold_gpa, data = university_clean, family = binomial)

tidy(log_model) |>
  kable(digits = 3)
```

Some of these predictors were not considered significant with p-values greater than a threshold of 0.05, so we will do further analysis to determine what is necessary to include in the final model.

**Analysis of Deviance Table**

Model 1: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen`

Model 2: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen + bedtime_mssd`

```{r}

sig_fit <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa
               + TotalSleepTime + demo_firstgen, data = university_clean,
               family = binomial) 
tidy(sig_fit) |>
  kable(digits = 3)

university_fit1 <- glm(as.factor(gpa_split) ~ university + demo_race
                       + threshold_gpa + TotalSleepTime + demo_firstgen
                       + bedtime_mssd, data = university_clean,
                       family = binomial)

anova(sig_fit, university_fit1, test = "Chisq") |>
  kable(digits = 3)


```

A new model was created with only the variables that were significant in the output from the first model. However, there were certain variables that we felt were still necessary to assess further, thus we used a Drop-in Deviance test to compare models.

We first compared this new model with a model including `bedtime_mssd`. With a p-value of 0.181, greater than the threshold of 0.05, we can conclude that the inclusion of `bedtime_mssd` does not significantly improve the model fit, so we will not include it in our final model.

**Analysis of Deviance Table**

Model 1: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen`

Model 2: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen + daytime_sleeplvl`

```{r}
university_fit2 <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen + daytime_sleep_lvl, data = university_clean, family = binomial)

ufit2_anova <- anova(sig_fit, university_fit2, test = "Chisq")

simp_ufit2_anova <- ufit2_anova[, c("Df","Deviance","Pr(>Chi)")]

ufit2_anova |>
  kable(digits = 3)

```

With a p-value of 0.595, greater than the threshold of 0.05, we can conclude that the inclusion of `daytime_sleep_lvl` does not significantly improve the model fit, so we will not include it in our final model.

We then decided to check whether there were any interaction effects between significant main effects, specifically between `university` & `TotalSleepTime` and `university` & `threshold_gpa` based on observations from our exploratory data analysis.

**Interaction Effect Analyses:**

**Analysis of Deviance Table**

Model 1: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen`

Model 2: `as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen + university*TotalSleepTime`

```{r}
int_fit <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa + demo_firstgen + TotalSleepTime + university*TotalSleepTime, data = university_clean, family = binomial)

int1_anova <- anova(sig_fit, int_fit, test = "Chisq")

sim_int1_anova <- int1_anova[, c("Df","Deviance","Pr(>Chi)")]

int1_anova |>
  kable(digits = 3)
```

With a p-value of 0.615, which is greater than the threshold of 0.05, we can conclude that the interaction effect between `university` and `TotalSleepTime` is not significant enough to be included in the final model.

```{r}
int_fit2 <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa + demo_firstgen + TotalSleepTime + university*threshold_gpa, data = university_clean, family = binomial)

int2_anova <- anova(sig_fit, int_fit2, test = "Chisq")

sim_int2_anova <- int2_anova[, c("Df","Deviance","Pr(>Chi)")]

int2_anova |>
  kable(digits = 3)

```

With a p-value of 0.067, greater than the threshold of 0.05, we can conclude that the interaction effect between `university` and `threshold_gpa` is not significant enough to be included in the final model.

```{r}
# int_fit3 <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa + demo_firstgen + TotalSleepTime + threshold_gpa*demo_race, data = university_clean, family = binomial)
# 
# int3_anova <- anova(university_fit3, int_fit3, test = "Chisq")
# 
# sim_int3_anova <- int3_anova[, c("Df","Deviance","Pr(>Chi)")]
# 
# int3_anova |>
#   kable(digits = 3)
```

We then decided to check for multicollinearity given the interconnected nature of these variables. To check this, we used the GVIF (Generalized Variance Inflation Factor) due to the presence of a few categorical predictors in our model.

```{r}
university_final <- glm(as.factor(gpa_split) ~ university + demo_race + threshold_gpa + TotalSleepTime + demo_firstgen, data = university_clean, family = binomial) #final model! university_fit3

vif(university_final) |>
  kable(digits = 3)
```

All normalized GVIFs for all variables are not greater than the threshold of 10 and are very close to 1, so we can confidently assume no multicollinearity within our final model.

## Results

The final model we determined is:

$$
logit(p_{high\_gpa}) = 4.187 - 0.619 \times universitycath\_priv \\ +0.188 \times universitystem\_priv \\
- 0.828 \times demo\_race
$$

$$
+ 1.750 \times threshold\_gpalow \\
- 0.008 \times TotalSleepTime \\ 
+ 1.006 \times demo\_firstgen
$$

$$
p_{high\_gpa} = \frac {1} {1+e^{-x}} 
$$

Where $x$ represents the logit equation shown above.

```{r}
tidy(university_final) |>
  kable(digits = 3)
```

Given the fact that none of the additional variables assessed were statistically significant, our final model is the same as our original model with university, race, first-generation status, threshold gpa, and total sleep time being predictors of whether a GPA was above the 75th percentile or not. The AUC for this model is 0.7688, indicating moderately strong predictive power.

```{r}

final_roc <- augment(university_final) |>
  roc_curve('as.factor(gpa_split)', .fitted, event_level = "second")
# 
# red_roc <- augment(sig_fit) |>
#   roc_curve('as.factor(gpa_split)', .fitted, event_level = "second")

combined_plot <- autoplot(final_roc, color = "red") +
  ggtitle("ROC Curves") +
  xlab("1 - Specificity") +
  ylab("Sensitivity") +
  geom_line(data = final_roc, aes(x = 1 - specificity, y = sensitivity), color = "red", show.legend = FALSE) +
  theme(plot.title = element_text(size = 9, face = "bold"),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7))

fin_aug <- augment(university_final)

final_auc <- fin_aug |>
  roc_auc('as.factor(gpa_split)',.fitted,
            event_level = "second")

# red_auc <- augment(sig_fit) |>
#   roc_auc('as.factor(gpa_split)',.fitted,
#             event_level = "second")

final_auc_value <- final_auc$.estimate
#red_auc_value <- red_auc$.estimate


# cat("AUC for Reduced Model:", red_auc_value, "\n")
cat("AUC for Final Model:", final_auc_value, "\n")

cooks_d <- cooks.distance(university_final)
cooks_d_df <- tibble(obs = 1:length(cooks_d), cooks_d = cooks_d)


inf_points <- cooks_d_df |>
  filter(cooks_d > 1)
inf_points


cook_plot <- cooks_d_df |>
  ggplot(aes(
    x = obs,
    y = cooks_d
  )) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 1, color = "red", linetype = "dashed") +
  labs(
    title = "Cook's Distance",
    x = "Observation Number",
    y = "Cook's Distance"
  ) +
  theme(plot.title = element_text(size = 9, face = "bold"),
        axis.title.x = element_text(size = 7),
        axis.title.y = element_text(size = 7))
  
grid.arrange(combined_plot, cook_plot, ncol = 2)

```

When checking for Cook's Distance, no data points were found to have a Cook's Distance greater than 1 with most far below 1, indicating that there are no influential points.

```{r}

# cat("AIC for Reduced Model:", AIC(sig_fit), "\n")
# cat("AIC for Final Model:", AIC(university_final), "\n")
# 
# cat("BIC for Reduced Model:", BIC(sig_fit), "\n")
# cat("BIC for Final Model:", BIC(university_final), "\n")

#Both the AIC and the BIC for the final model are lower than those for the reduced model as shown above. Therefore, we believe that our final model is a better model to predict a high or low GPA, and the addition of predictors `TotalSleepTime` and `daytime_sleep_lvl` are significant.
```

Finally, we assess the key assumptions of logistic regression within our model. The only quantitative predictor we used in our model, `TotalSleepTime`, shows a linear relationship with the log-odds of the response (Appendix Figure 4).

Although logistic regression assumes independence between observations, we grouped our observations by the type of university attended, which could introduce potential correlation between observations by school. However, we continued with logistic regression for the following reasons:

-   We wanted to predict a categorical response variable, high vs. low GPA, from various predictors, and find the best model (from this dataset) to do so.

-   We used `university` as one of the predictor variables to account for differences between observations and it was proven to be a significant predictor of `gpa_split` through our analysis.

## Discussion and Conclusion

Factors that have a significant impact on studentsâ€™ academic performance include university type, race, first-generation status, total sleep time, and whether students did better in the spring semester compared to the fall semester. In contrast, factors such as bedtime variability, gender, and the amount of daytime sleep were not significant in determining studentsâ€™ academic performance. This gives us a full picture of how to characterize an individual (demographic and sleep-related variables). We came to this result by looking at p-values from a logistic regression model and using drop-in deviance tests to assess the value of adding certain variables and interaction effects to the model.Â 

Some limitations of this analysis are as follows:Â 

Each university type (Catholic private, public, and STEM private) only consisted of one university for each type (Notre Dame, University of Washington, and Carnegie Mellon respectively), which makes it difficult to generalize our conclusions to all college students across the United States. However, it is still interesting to see the comparison across university types.Â 

Another limitation is that using term GPA as our response variable does not adequately capture all aspects of academic performance. Term GPA is only one indicator of academic performance. There are other indicators such as joining student life organizations, participating in research, internships, study abroad trips etc. which are hard to quantify. If there was more qualitative data, such as a survey that asks about a studentâ€™s participation in out of the classroom activities, and a student's perceived academic performance, we could have a more holistic model that takes into account these other factors. Furthermore, GPA across universities may be calculated with different levels of grade inflation, indicating a lack of uniformity in the response variable.

## Appendix

#### Figure 1.

```{r}

fig.width = 5
fig.height = 4

p1 <- university_clean |>
  ggplot(aes(
    x = TotalSleepTime/60,
    y = cum_gpa,
    color = factor(demo_race, labels = c("Underrepresented", "Non-Underrepresented"))
  )) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "By Race",
    x = "Total Sleep Time (hours)",
    y = "Cumulative GPA /4.0",
    color = "Underrepresented Status"
  ) +
  theme(
    plot.title = element_text(size = 7, hjust = 0.5, face = "bold"),
    legend.position = "bottom",
    legend.text = element_text(size = 7),
    legend.title = element_text(size = 7),
    aspect.ratio = 1.5,
    axis.title.x = element_text(size = 7),
    axis.title.y = element_text(size = 7),
    legend.direction = "vertical"
  )


p2 <- university_clean |>
  filter(!is.na(demo_gender)) |>
  ggplot(aes(
    x = TotalSleepTime,
    y = cum_gpa,
    color = factor(demo_race, labels = c("Male", "Female"))
  )) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "By Gender",
    x = "Total Sleep Time (hours)",
    y = "Cumulative GPA /4.0",
    color = "Gender"
  ) +
  theme(
    plot.title = element_text(size = 7, hjust = 0.5, face = "bold"),
    legend.text = element_text(size = 7),
    legend.position = "bottom",
    legend.title = element_text(size = 7),
    aspect.ratio = 1.5,
    legend.direction = "vertical",
    axis.title.x = element_text(size = 7),
    axis.title.y = element_text(size = 7),
  )


p3 <- university_clean |>
  filter(!is.na(demo_firstgen)) |>
  ggplot(aes(
    x = TotalSleepTime,
    y = cum_gpa,
    color = factor(demo_firstgen, labels = c("Not First-Generation", "First-Generation"))
  )) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "By First-Generation Status",
    x = "Total Sleep Time (hours)",
    y = "Cumulative GPA /4.0",
    color = "First-Generation Status"
  ) +
  theme(
    plot.title = element_text(size = 7, hjust = 0.5, face = "bold"),
    legend.position = "bottom",
    aspect.ratio = 1.5,
    legend.text = element_text(size = 7),
    legend.title = element_text(size = 7),
    legend.direction = "vertical",
    axis.title.x = element_text(size = 7),
    axis.title.y = element_text(size = 7),
  )

grid.arrange(p1, p2, p3, ncol = 3, top = "Cumulative GPA vs. Total Sleep Time")
```

#### Figure 2.

```{r}
na_table <- university_clean |>
  group_by(university) |>
  summarize(
    total_count = n(),
    na_count = sum(is.na(term_units)),
    non_na_count = sum(!is.na(term_units))
  ) |>
  kable(digits = 3, caption = "Counts of NA values by University")
na_table
```

#### Figure 3.

```{r}
pg5 <- university_clean |>
  ggplot(aes(x = TotalSleepTime)) + 
  geom_histogram() +
  labs(title = "Distribution of the Total Sleep Time",
       x = "Total Sleep Time in Minutes", 
       y = "Count") +
    theme(
  plot.title = element_text(size = 10)
)

 pg6 <- university_clean |>
   ggplot(aes(x = bedtime_mssd)) + 
   geom_histogram() +
   labs(title = "Distribution of the Bedtime Variability",
        x = "Mean successive squared difference of bedtime",
        y = "Count") +
     theme(
   plot.title = element_text(size = 10)
 )


pg7 <- university_dataset |>
  ggplot(aes(x = frac_nights_with_data)) + 
  geom_histogram() +
  labs(title = "Distribution of the Fraction of Nights With Data",
       x = "Fraction of Nights With Data",
       y = "Count") +
    theme(
  plot.title = element_text(size = 10)
) +
  geom_vline(xintercept = 0.5, linetype = "dashed", color = "red")


pg8 <- university_clean |>
  ggplot(aes(x = daytime_sleep)) + 
  geom_histogram() +
  labs(title = "Distribution of Daytime Sleep",
       x = "Daytime Sleep in Minutes",
       y = "Count") +
    theme(
  plot.title = element_text(size = 10)
)

sleep_plots <- (pg5 | pg6) / (pg7 | pg8)
sleep_plots
```

#### Figure 4.

```{r, fig.width=15, fig.height=8}
final_pred <- predict(university_final, type = "link")

pa1 <- ggplot(data = fin_aug, aes(x = TotalSleepTime, y = final_pred)) + 
  geom_point() + 
  geom_smooth(method = "lm", color = "blue") + 
  labs(
    title = "Logit for TotalSleepTime", 
    y = "Log-odds(Fitted values)"
  ) + 
  theme(
    legend.position = "bottom",
    plot.title = element_text(size = 20),
    axis.title = element_text(size = 15),       
    axis.text = element_text(size = 15)
  )
pa1

# 
# pa2 <- ggplot(data = fin_aug, aes(x = university, y = final_pred)) + 
#   geom_boxplot(fill = "lightblue", color = "black") +
#     labs(
#     title = "Logit for University", 
#     y = "Log-odds(Fitted values)"
#   ) + 
#   theme(
#     legend.position = "bottom",
#     plot.title = element_text(size = 20),
#     axis.title = element_text(size = 15),       
#     axis.text = element_text(size = 15)
#   )

# 
# pa3 <- ggplot(data = fin_aug, aes(x = factor(demo_race), y = final_pred)) + 
#   geom_boxplot(aes(fill = factor(demo_race)), color = "black") +
#     labs(
#     title = "Logit for demo_race", 
#     y = "Log-odds(Fitted values)"
#   ) + 
#   theme(
#     legend.position = "bottom",
#     plot.title = element_text(size = 20),
#     axis.title = element_text(size = 15),       
#     axis.text = element_text(size = 15),
#     legend.text = element_text(size = 15),    
#     legend.title = element_text(size = 15)
#   )


# pa4 <- ggplot(data = fin_aug, aes(x = threshold_gpa, y = final_pred)) + 
#   geom_boxplot(fill = "blue", color = "black") +
#     labs(
#     title = "Logit for threshold_gpa", 
#     y = "Log-odds(Fitted values)"
#   ) + 
#   theme(
#     legend.position = "bottom",
#     plot.title = element_text(size = 20),
#     axis.title = element_text(size = 15),       
#     axis.text = element_text(size = 15)
#   )


# pa5 <- ggplot(data = fin_aug, aes(x = factor(demo_firstgen), y = final_pred)) + 
#   geom_boxplot(fill = "darkblue", color = "black") +
#     labs(
#     title = "Logit for demo_firstgen", 
#     y = "Log-odds(Fitted values)"
#   ) + 
#   theme(
#     legend.position = "bottom",
#     plot.title = element_text(size = 20),
#     axis.title = element_text(size = 15),       
#     axis.text = element_text(size = 15)
#   )

#grid.arrange(pa1, pa2, pa3, pa4, pa5, ncol = 3)

```
